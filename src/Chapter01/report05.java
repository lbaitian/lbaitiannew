package Chapter01;

public class report05 {
    public static void main(String[] args) {
        //(1)先得到2的补码，2的原码： 00000000  00000000  00000000  00000010
        //2的补码 00000000  00000000  00000000  00000010
        //（2）3的补码 3的原码： 00000000 0000000 00000000 00000010
        //3的补码 00000000 00000000 00000000 00000011
        System.out.println(2&3);
        /*
        按位与&：两位全是1，结果为1，否则为0
        按位或|：两位有一个是1，结果为1，否则为0
        按位异或^:两位一个为0，一个为1，结果为1，否则为0
        按位取反~：0变1，1变0
        */
        //（1）先得到-2的原码： 10000000 00000000 00000000 00000010
        //得到-2的反码：       11111111 11111111 11111111 11111101
        //得到-2的补码：       11111111 11111111 11111111 11111110
        //~-2操作：           00000000 00000000 00000000 00000001
        //运算后的原码就是：    00000000 00000000 00000000 00000001 → 1
        System.out.println(~-2);
        /*
        对于正数来说：反码、补码都与原码一样。
        对于负数来说：反码：原码中除去符号位，其他的数值位按位取反，即0变1，1变0。补码：反码+1
        例如：40
            原码：00101000
            反码：00101000
            补码：00101000
        例如：-216
            原码：1000000011011000
            反码：1111111100100111
            补码：1111111100101000
        */
        System.out.println(~2);
        /*
        2的原码：00000000 00000000 00000000 00000010
        2的补码：11111111 111111111 1111111 11111101
        因为2的补码开头是1，所以是负数
        得到负数的补码：11111111 11111111 11111111 11111101  -1
        负数的反码：11111111 11111111 11111111 11111100
        负数的原码：10000000 00000000 00000000 00000011
        转化成十进制就得出：~2=-3
        */
    }
}
